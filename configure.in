# Boilerplate
AC_INIT(FBX, 0.0.1, xiphux@gmail.com)
AC_CONFIG_AUX_DIR(config)
AM_CONFIG_HEADER([config.h])
AM_INIT_AUTOMAKE(FBX, 0.0.1)
AM_MAINTAINER_MODE

# Arguments
AM_OPTIONS_WXCONFIG
AC_ARG_ENABLE(debug, [  --enable-debug		enables debugging], enable_debug=$enableval, enable_debug=no)
if test "x$enable_debug" = "xyes"; then
	AC_DEFINE(DEBUG,,[Debugging])
fi
AC_ARG_ENABLE(alsa,  	 [  --enable-alsa		enables ALSA], enable_alsa=$enableval, enable_alsa=no)
AC_ARG_ENABLE(ao,    	 [  --enable-ao			enables libao], enable_ao=$enableval, enable_ao=yes)
AC_ARG_ENABLE(vorbis,	 [  --enable-vorbis		enables Vorbis], enable_vorbis=$enableval, enable_vorbis=yes)
AC_ARG_ENABLE(flac,  	 [  --enable-flac		enables FLAC], enable_flac=$enableval, enable_flac=no)
AC_ARG_ENABLE(magic,	 [  --enable-magic		enables magic], enable_magic=$enableval, enable_magic=yes)
AC_ARG_ENABLE(auitoolbar,[  --enable-auitoolbar		enables wxAUI toolbars], enable_auitoolbar=$enableval, enable_auitoolbar=no)
if test "x$enable_auitoolbar" = "xyes"; then
	AC_DEFINE(AUI_TOOLBAR,,[wxAUI toolbar])
fi

# Programs
AC_PROG_CXX
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_LIBTOOL
AM_PATH_WXCONFIG(2.8.0, wxWin=1)
if test "$wxWin" != 1; then
	AC_MSG_ERROR([
		wxWindows must be installed on your system
		but wx-config script couldn't be found.

		Please check that wx-config is in path, the directory
		where wxWindows libraries are installed (returned by
		'wx-config --libs' command) is in LD_LIBRARY_PATH or
		equivalent variable and wxWindows version is 2.8.0 or above.
	])
fi

# Libraries

# Audio output libraries
if test "x$enable_ao" = "xyes"; then
PKG_CHECK_MODULES(AO, ao >= 0.8.6,,enable_ao=no)
fi
if test "x$enable_ao" = "xyes"; then
	AC_DEFINE(HAVE_AO,,[Have libao])
	AM_CONDITIONAL(AO, true)
	AC_SUBST(AO_CFLAGS)
	AC_SUBST(AO_LIBS)
else
	AM_CONDITIONAL(AO, false)
fi

if test "x$enable_alsa" = "xyes"; then
PKG_CHECK_MODULES(ALSA, alsa >= 1.0.13,,enable_alsa=no)
fi
if test "x$enable_alsa" = "xyes"; then
	AC_DEFINE(HAVE_ALSA,,[Have ALSA])
	AM_CONDITIONAL(ALSA, true)
	AC_SUBST(ALSA_CFLAGS)
	AC_SUBST(ALSA_LIBS)
else
	AM_CONDITIONAL(ALSA, false)
fi

if test "x$enable_ao" = "xno" && test "x$enable_alsa" = "xno"; then
	AC_MSG_ERROR([No Audio outputs enabled!])
fi

# Audiofile libraries
if test "x$enable_vorbis" = "xyes"; then
PKG_CHECK_MODULES(VORBISFILE, vorbisfile >= 1.1.2,,enable_vorbis=no)
fi
if test "x$enable_vorbis" = "xyes"; then
	AC_DEFINE(HAVE_VORBIS,,[Have Vorbis])
	AM_CONDITIONAL(VORBIS, true)
	AC_SUBST(VORBISFILE_CFLAGS)
	AC_SUBST(VORBISFILE_LIBS)
else
	AM_CONDITIONAL(VORBIS, false)
fi

if test "x$enable_flac" = "xyes"; then
	AC_CHECK_LIB(FLAC,FLAC__seekable_stream_decoder_new,,enable_flac=no)
fi

if test "x$enable_magic" = "xyes"; then
	AC_CHECK_LIB(magic,magic_file,,enable_magic=no)
fi

# Headers
if test "x$enable_flac" = "xyes"; then
	AC_CHECK_HEADERS(FLAC/all.h,,enable_flac=no)
fi

if test "x$enable_magic" = "xyes"; then
	AC_CHECK_HEADERS(magic.h,,enable_magic=no)
fi

if test "x$enable_flac" = "xyes"; then
	AC_DEFINE(HAVE_FLAC,,[Have FLAC])
	FLAC_LIBS=-lFLAC
	AC_SUBST(FLAC_LIBS)
	AM_CONDITIONAL(FLAC, true)
else
	AM_CONDITIONAL(FLAC, false)
fi

if test "x$enable_magic" = "xyes"; then
	AC_DEFINE(HAVE_MAGIC,,[Have magic])
	MAGIC_LIBS=-lmagic
	AC_SUBST(MAGIC_LIBS)
	AM_CONDITIONAL(MAGIC, true)
else
	AM_CONDITIONAL(MAGIC, false)
fi

if test "x$enable_vorbis" = "xno" && test "x$enable_flac" = "xno"; then
	AC_MSG_ERROR([No AudioFile codecs enabled!])
fi

# Types
AC_HEADER_STDBOOL
AC_C_CONST
AC_TYPE_SIZE_T

# Library functions
AC_CHECK_FUNCS([mkdir])

# Output
AC_CONFIG_FILES([
	Makefile
	src/Makefile
	src/audiofile/Makefile
	src/audio/Makefile
	src/config/Makefile
	src/playlist/Makefile
	doc/Makefile
])
AC_OUTPUT
